<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>How-to guides on</title><link>https://waha.devlike.pro/docs/how-to/</link><description>Recent content in How-to guides on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="https://waha.devlike.pro/docs/how-to/index.xml" rel="self" type="application/rss+xml"/><item><title>Install</title><link>https://waha.devlike.pro/docs/how-to/install/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/install/</guid><description>On the page you&amp;rsquo;ll find answers on how to install WAHA.
If you wish to read a quick start guide which show you how to send you first message via HTTP API please go to Quick Start -&amp;gt;.
WAHA is distributed in two versions, that have a similar installation instructions.
WAHA Core - the basic version that meet almost 80% people&amp;rsquo;s needs. 100% free and open source -&amp;gt;. WAHA Plus - the version with advanced messages, security, and reliability features.</description></item><item><title>Send messages</title><link>https://waha.devlike.pro/docs/how-to/send-messages/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/send-messages/</guid><description>We consider that you&amp;rsquo;ve run docker container and authenticated the session with QR code.
If you haven&amp;rsquo;t yet - please follow the steps from Quick Start â†’.
Fields #
There are common fields that you can find in almost all requests:
{ &amp;quot;session&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;chatId&amp;quot;: &amp;quot;12132132130@c.us&amp;quot;, &amp;quot;file&amp;quot;: &amp;quot;...&amp;quot; } session #
session - a session name from which account you&amp;rsquo;re sending the message. We use default in the examples.
Core version supports only default session.</description></item><item><title>Receive messages</title><link>https://waha.devlike.pro/docs/how-to/receive-messages/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/receive-messages/</guid><description>We consider that you&amp;rsquo;ve run docker container and authenticated the session with QR code.
If you haven&amp;rsquo;t yet - please follow the steps from Quick Start â†’.
You must use Webhooks to receive messages from WhatsApp to your application.
Start a new session with configured message event in webhooks - call POST /api/sessions/start with the payload:
{ &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;config&amp;quot;: { &amp;quot;webhooks&amp;quot;: [ { &amp;quot;url&amp;quot;: &amp;quot;https://httpbin.org/post&amp;quot;, &amp;quot;events&amp;quot;: [ &amp;quot;message&amp;quot; ] } ] } } After that WAHA&amp;rsquo;ll send events (see below) about new messages to an endpoint you provided.</description></item><item><title>Webhooks</title><link>https://waha.devlike.pro/docs/how-to/webhooks/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/webhooks/</guid><description>The project uses Webhooks to send the messages and events from WhatsApp to your application.
Webhooks are a way for two different applications to communicate with each other in real-time. When a certain event happens in one application, it sends a message to another application through a webhook URL. The receiving application can then take action based on the information received.
Setup webhooks #
Session webhooks #
You can define webhooks configuration per session when you start it with POST /api/sessions/start request data.</description></item><item><title>Sessions</title><link>https://waha.devlike.pro/docs/how-to/sessions/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/sessions/</guid><description>Endpoints #
See the list of engines that support the features -&amp;gt;.
Start #
In order to start a new session - call POST /api/sessions/start
{ &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot; } Configure webhooks #
You can configure webhooks for a session:
{ &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;config&amp;quot;: { &amp;quot;webhooks&amp;quot;: [ { &amp;quot;url&amp;quot;: &amp;quot;https://httpbin.org/post&amp;quot;, &amp;quot;events&amp;quot;: [ &amp;quot;message&amp;quot; ] } ] } } Read more about available options on Webhooks page -&amp;gt;
The configuration is saved and will be applied if the docker container restarts, and you set WHATSAPP_RESTART_ALL_SESSIONS environment variables.</description></item><item><title>Polls</title><link>https://waha.devlike.pro/docs/how-to/polls/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/polls/</guid><description>Waiting for WEBJS engine to support it, and we&amp;rsquo;ll add it ASAP!
Endpoints #
See the list of engines that support the feature -&amp;gt;.
Send poll #
Use the endpoint to send a poll!
POST /api/sendPoll The request body is pretty simple:
{ &amp;quot;session&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;chatId&amp;quot;: &amp;quot;123123123@c.us&amp;quot;, &amp;quot;poll&amp;quot;: { &amp;quot;name&amp;quot;: &amp;quot;How are you?&amp;quot;, &amp;quot;options&amp;quot;: [ &amp;quot;Awesome!&amp;quot;, &amp;quot;Good!&amp;quot;, &amp;quot;Not bad!&amp;quot; ], &amp;quot;multipleAnswers&amp;quot;: false } } The response you get back:
{ &amp;quot;id&amp;quot;: &amp;quot;true_321321321@c.</description></item><item><title>Chats</title><link>https://waha.devlike.pro/docs/how-to/chats/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/chats/</guid><description>Chats methods.
Parameters in path that you can find in below endpoints:
{session} - use the session name for Whatsapp instance that you created with POST /api/session/start endpoint {chatId} - chat id in format 123123123123@[c.us|g.us], c.us for direct chats and g.us for groups. Endpoints #
See the list of engines that support the feature -&amp;gt;.
Get all chats #
Get all chats GET /api/{session}/chats
Get messages from chat #
Get 100 messages from the chat</description></item><item><title>Contacts</title><link>https://waha.devlike.pro/docs/how-to/contacts/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/contacts/</guid><description>Methods for contacts.
ðŸ‘‰ WhatsApp Web does not support adding contacts, so the API doesn't support it too. Endpoints #
See the list of engines that support the feature -&amp;gt;.
Get all contacts #
Get your contacts - GET /api/contacts/all
[ { &amp;quot;id&amp;quot;: &amp;quot;11231231231@c.us&amp;quot;, &amp;quot;number&amp;quot;: &amp;quot;11231231231&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Contact Name&amp;quot;, &amp;quot;pushname&amp;quot;: &amp;quot;Pushname&amp;quot;, &amp;quot;shortName&amp;quot;: &amp;quot;Shortname&amp;quot;, &amp;quot;isMe&amp;quot;: true, &amp;quot;isGroup&amp;quot;: false, &amp;quot;isWAContact&amp;quot;: true, &amp;quot;isMyContact&amp;quot;: true, &amp;quot;isBlocked&amp;quot;: false } ] Get contact #
Get contact</description></item><item><title>Groups</title><link>https://waha.devlike.pro/docs/how-to/groups/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/groups/</guid><description>Endpoints #
See the list of engines that support the feature -&amp;gt;.
Endpoints for groups. Please look at swagger for details.
{session} - use the session name for Whatsapp instance that you created with POST /api/session/start endpoint {groupId} - group id in format 123123123123@g.us. You can get the id in a few ways: By handling incoming message webhook. By getting all groups (see below). By creating a new group and saving the id.</description></item><item><title>Security</title><link>https://waha.devlike.pro/docs/how-to/security/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>https://waha.devlike.pro/docs/how-to/security/</guid><description>ðŸ’¡ Do not expose WhatsApp HTTP API on public networks! We do not recommend exposing the API on any public networks!
Either protect the API with Api Key or deny access by using firewalls.
Swagger Security #
Username and password #
If you want to hide the project Swagger panel under the password - run the following command to hide under admin/admin login and password.
docker run -it -e WHATSAPP_SWAGGER_USERNAME=admin -eWHATSAPP_SWAGGER_PASSWORD=admin devlikeapro/whatsapp-http-api-plus Open http://localhost:3000/ and enter admin / admin in the inputs:</description></item></channel></rss>